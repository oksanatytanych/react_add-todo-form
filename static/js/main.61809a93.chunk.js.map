{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","userId","TodoList","todos","map","username","getUserById","usersFromServer","find","TodoForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","htmlFor","type","placeholder","value","onChange","e","target","required","disabled","initialTodos","getNewTodoId","Math","max","App","setTodos","data","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61809a93.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={\n      cn('TodoInfo', 'box', { 'TodoInfo--completed': todo.completed })\n    }\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} key={todo.userId} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"box\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        data-id={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  const currentUser = usersFromServer.find(user => user.id === userId);\n\n  return currentUser || null;\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport usersFromServer from '../../api/users';\n\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todoEl: TodoWithUser) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChenge = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChenge = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!userId || !title) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: true,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      className=\"box\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"title\">\n          {'Title: '}\n        </label>\n\n        <div className={cn('control', { 'has-icons-right': hasTitleError })}>\n          <input\n            className={cn('input', { 'is-danger': hasTitleError })}\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChenge}\n          />\n\n          {hasTitleError && (\n            <span className=\"icon is-small is-right\">\n              <i className=\"fas fa-exclamation-triangle has-text-danger\" />\n            </span>\n          )}\n        </div>\n\n        {hasTitleError && (\n          <p className=\"help is-danger\">Please enter a title</p>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-id\">\n          {'User: '}\n        </label>\n\n        <div className=\"control has-icons-left\">\n          <div className={cn('select', { 'is-danger': hasUserIdError })}>\n            <select\n              id=\"user-id\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChenge}\n              required\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n        </div>\n\n        {hasUserIdError && (\n          <p className=\"help is-danger\">Please choose a user</p>\n        )}\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className=\"button is-link\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { getUserById } from './services/user';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { Todo } from './types/Todo';\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(initialTodos);\n\n  const addTodo = ({ id, ...data }: TodoWithUser) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setTodos(currentTodos => [newTodo, ...currentTodos]);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}